---
name: Build ISO

on:
  workflow_dispatch:
    inputs:
      upload-to-cloudflare:
        description: "Upload to Cloudflare"
        required: false
        default: false
        type: boolean
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/build-iso.yml'

env:
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  IMAGE_NAME: "achillobator"
  DEFAULT_TAG: "latest"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ISO
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: read
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Just
        uses: extractions/setup-just@dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2

      - name: Build ISO
        id: build
        uses: bootc-warehouse/bootc-image-builder-action@main
        with:
          config-file: ./image-builder-iso.config.toml
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}

      - name: Patch ISO with our branding
        env:
          ISO_OUTPUT_PATH: ${{ steps.build.outputs.anaconda-iso-output-path }}
        run: just patch-iso-branding 1 $ISO_OUTPUT_PATH

      - name: Rename ISO
        id: rename
        env:
          ISO_OUTPUT_PATH: ${{ steps.build.outputs.anaconda-iso-output-path }}
          OUTPUT_DIRECTORY: ${{ steps.build.outputs.output-directory }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          ISO_PATH=$OUTPUT_DIRECTORY/$IMAGE_NAME.iso
          mv $OUTPUT_PATH $ISO_PATH
          echo "ISO_PATH=$ISO_PATH" >> $GITHUB_OUTPUT

      # While the bootc-image-builder-action does generate checksums for the artifacts,
      #Â the subsequent branding steps alter the files and therefore the checksums
      - name: Generate Checksum
        id: checksum
        env:
          ISO_PATH: ${{ steps.rename.outputs.ISO_PATH }}
          OUTPUT_DIRECTORY: ${{ steps.build.outputs.output-directory }}
        run: |
          FILE_NAME=$(basename $ISO_PATH)
          CHECKSUM_FILE="${ISO_PATH}-CHECKSUM"

          sha256sum $ISO_PATH | awk -v fname="$FILE_NAME" '{print $1, fname}' > $CHECKSUM_FILE
          cat $CHECKSUM_FILE

      - name: Upload to Job Artifacts
        if: inputs.upload-to-cloudflare == false
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4
        with:
          name: ${{ env.IMAGE_NAME }}-${{ env.DEFAULT_TAG }}-iso
          if-no-files-found: error
          path: ${{ steps.build.outputs.output-directory }}

      - name: Upload to CloudFlare
        if: inputs.upload-to-cloudflare == true
        shell: bash
        env:
          RCLONE_CONFIG_R2_TYPE: s3
          RCLONE_CONFIG_R2_PROVIDER: Cloudflare
          RCLONE_CONFIG_R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          RCLONE_CONFIG_R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_R2_REGION: auto
          RCLONE_CONFIG_R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          SOURCE_DIR: ${{ steps.build.outputs.output-directory }}
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone
          rclone copy $SOURCE_DIR R2:bluefin
