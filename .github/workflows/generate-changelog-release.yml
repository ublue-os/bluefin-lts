on:
  push:
    branches:
      - main
    tags:
      - 'lts-*'
      - 'lts.*'
  workflow_call:
    inputs:
      stream_name:
        description: "Release Tag (e.g. stream10, latest)"
        type: string
        default: "lts"
        required: false
      force_publish:
        description: "Force publish changelog even if tag hasn't changed"
        type: boolean
        default: false
        required: false
  workflow_dispatch:
    inputs:
      handwritten:
        description: "Small Changelog about changes in this build"
        required: false
        type: string
      force_publish:
        description: "Force publish changelog even if tag hasn't changed"
        type: boolean
        default: false
        required: false
permissions:
  contents: write

name: Generate Release
jobs:
  generate-release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ["lts"]
    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0  # Fetch all history for proper tag detection

      - name: Setup GitHub CLI
        run: |
          # GitHub CLI is already available in GitHub Actions runners
          gh --version

      - name: Check for new tags and generate changelog
        id: changelog
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Build Python command with optional arguments
          python_args=("${{ matrix.version }}" --ci)
          
          # Add force flag if requested
          if [[ "${{ inputs.force_publish || 'false' }}" == "true" ]]; then
            python_args+=(--force)
          fi
          
          # Add handwritten content if provided
          if [[ -n "${{ inputs.handwritten }}" ]]; then
            echo "${{ inputs.handwritten }}" > handwritten.txt
            python_args+=(--handwritten handwritten.txt)
          fi
          
          # Execute the Python script directly
          python3 .github/changelogs.py "${python_args[@]}"

      - name: Create Release
        if: steps.changelog.outputs.SKIP_CHANGELOG != 'true'
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          name: ${{ steps.changelog.outputs.CHANGELOG_TITLE }}
          tag_name: ${{ steps.changelog.outputs.CHANGELOG_TAG }}
          body_path: ${{ steps.changelog.outputs.CHANGELOG_PATH }}
          make_latest: true

      - name: Log skip reason
        if: steps.changelog.outputs.SKIP_CHANGELOG == 'true'
        run: |
          echo "Changelog generation was skipped - release already exists for the current tag"
          echo "Use the 'force_publish' option to regenerate if needed"

      - name: Upload changelog artifacts
        if: steps.changelog.outputs.SKIP_CHANGELOG != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: changelog-${{ matrix.version }}
          path: |
            ./output.env
            ./changelog.md
          retention-days: 30

